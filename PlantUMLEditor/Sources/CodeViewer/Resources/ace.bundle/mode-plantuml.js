ace.define("ace/mode/plantuml_highlight_rules",["require","exports","module","ace/lib/oop","ace/mode/text_highlight_rules"],function(e,t,n){"use strict";var r=e("../lib/oop"),i=e("./text_highlight_rules").TextHighlightRules,s=function(){this.$rules={start:[{token:["diagram.source.wsd","keyword.control.diagram.source.wsd","diagram.source.wsd","diagram.source.wsd"],regex:/^(\s*)(@start[a-z]+)((?:\s+.+?)?)(\s*$)/,caseInsensitive:!0,push:[{token:["diagram.source.wsd","keyword.control.diagram.source.wsd","diagram.source.wsd"],regex:/^(\s*)(@end[a-z]+)(\s*$)/,caseInsensitive:!0,next:"pop"},{include:"#Quoted"},{include:"#Comment"},{include:"#Style"},{include:"#Class"},{include:"#Object"},{include:"#Activity"},{include:"#Sequence"},{include:"#State"},{include:"#Keywords"},{include:"#General"},{defaultToken:"diagram.source.wsd"}],comment:"diagram block"},{include:"#Quoted"},{include:"#Comment"},{include:"#Style"},{include:"#Class"},{include:"#Object"},{include:"#Activity"},{include:"#Sequence"},{include:"#State"},{include:"#Keywords"},{include:"#General"}],"#Quoted":[{token:"support.variable.definitions.source.wsd",regex:/^\s*:/,caseInsensitive:!0,push:[{token:"support.variable.definitions.source.wsd",regex:/:|[\];|<>\/}]?\s*$/,caseInsensitive:!0,next:"pop"},{defaultToken:"support.variable.definitions.source.wsd"}],comment:"quoted definitions"},{token:"string.quoted.double.source.wsd",regex:/"/,push:[{token:"string.quoted.double.source.wsd",regex:/"/,next:"pop"},{defaultToken:"string.quoted.double.source.wsd"}],comment:"double quoted"}],"#Comment":[{token:"comment.line.comment.source.wsd",regex:/^\s*'/,caseInsensitive:!0,push:[{token:"comment.line.comment.source.wsd",regex:/$/,caseInsensitive:!0,next:"pop"},{defaultToken:"comment.line.comment.source.wsd"}],comment:"comment line"},{token:"comment.block.source.wsd",regex:/\s*\/'/,caseInsensitive:!0,push:[{token:"comment.block.source.wsd",regex:/'\/\s*/,caseInsensitive:!0,next:"pop"},{defaultToken:"comment.block.source.wsd"}],comment:"comment block"}],"#Style":[{token:["text","keyword.other.skinparam.source.wsd","text","keyword.other.skinparam.keyword.source.wsd","constant.numeric.skinparam.keyword.source.wsd","text","string.quoted.double.skinparam.value.source.wsd","text"],regex:/^(\s*)(skinparam)(\s+)(\w+)((?:<<\s*.+?\s*>>)?)(\s+)([^\{\}]+?)(\s*$)/,caseInsensitive:!0,comment:"inline style"},{todo:{token:["text","keyword.other.skinparam.source.wsd","text","keyword.other.skinparam.keyword.source.wsd","constant.numeric.skinparam.keyword.source.wsd","keyword.other.skinparam.keyword.source.wsd","constant.numeric.skinparam.keyword.source.wsd","text"],regex:/^(\s*)(?:(skinparam)(?:(\s+)(\w+?)((?:<<\s*.+?\s*>>)?))?|(\w+)((?:<<\s*.+?\s*>>)?))(\s*\{\s*$)/,caseInsensitive:!0,push:[{token:"text",regex:/^\s*(?<!\\)\}\s*$/,next:"pop"},{token:["text","keyword.other.skinparam.keyword.source.wsd","constant.numeric.skinparam.keyword.source.wsd","text","string.quoted.double.skinparam.value.source.wsd","text"],regex:/^(\s*)(\w+)((?:<<\s*.+?\s*>>)?)(\s+)([^\{\}]+?)(\s*$)/,caseInsensitive:!0,comment:"inline style"},{include:"$self"}]},comment:"style block"}],"#Keywords":[{token:"keyword.other.linebegin.source.wsd",regex:/^\s*(?:usecase|actor|object|participant|boundary|control|entity|database|create|component|interface|package|node|folder|frame|cloud|annotation|enum|abstract\s+class|abstract|class|state|autonumber(?:\s+stop|\s+resume|\s+inc)?|activate|deactivate|return|destroy|newpage|alt|else|opt|loop|par|break|critical|group|box|rectangle|namespace|partition|agent|artifact|card|circle|collections|file|hexagon|label|person|queue|stack|storage|mainframe|map|repeat|backward|diamond|goto|binary|clock|concise|robust|compact\s+concise|compact\s+robust|json|protocol|struct)\b/,caseInsensitive:!0,comment:"line begin keywords"},{token:"keyword.other.wholeline.source.wsd",regex:/^\s*(?:split(?: again)?|endif|repeat|start|stop|end|end\s+fork|end\s+split|fork(?: again)?|detach|end\s+box|top\s+to\s+bottom\s+direction|left\s+to\s+right\s+direction|kill|end\s+merge|allow(?:_)?mixing)\s*$/,caseInsensitive:!0,comment:"whole line keywords"},{token:"keyword.other.other.source.wsd",regex:/\b(?:as|{(?:static|abstract)\})\b/,caseInsensitive:!0,comment:"other keywords"}],"#General":[{token:["text","keyword.other.title.source.wsd","text"],regex:/^(\s*)(title)(\s*$)/,caseInsensitive:!0,push:[{token:["text","keyword.other.title.source.wsd"],regex:/^(\s*\b)(end\s+title)\b/,caseInsensitive:!0,next:"pop"},{token:["text","entity.name.function.title.source.wsd","text"],regex:/^(\s*)(.+?)(\s*$)/,caseInsensitive:!0}],comment:"multi-line title, enables ctrl+r jump list."},{token:["text","keyword.other.title.source.wsd","text","entity.name.function.title.source.wsd","text"],regex:/^(\s*)(title)(\s+)(.+?)(\s*$)/,caseInsensitive:!0,comment:"title, enables ctrl+r jump list."},{token:["keyword.other.scale.source.wsd","keyword.other.scale.source.wsd","keyword.other.scale.source.wsd","keyword.other.scale.source.wsd","keyword.other.scale.source.wsd","constant.numeric.scale.source.wsd","keyword.other.scale.source.wsd","keyword.operator.scale.source.wsd","keyword.other.scale.source.wsd","constant.numeric.scale.source.wsd","keyword.other.scale.source.wsd","keyword.other.scale.source.wsd"],regex:/^(\s*)(scale)(\s+)(?:(max)(\s+))?(\d+(?:\.?\d+)?)(\s*)(?:([\*\/])(\s*)(\d+\.?(?:\.?\d+)?)|(width|height))?(\s*$)/,caseInsensitive:!0,comment:"scale 1.5, scale 2/3, scale 200 width, scale 200 height, scale 200*100, scale max 300*200"},{token:["text","keyword.other.note.source.wsd","text","constant.numeric.caption.source.wsd","text"],regex:/^(\s*)(caption)(\s+)(.+)(\s*$)/,caseInsensitive:!0,comment:"inline caption"},{token:["text","keyword.other.note.source.wsd","text","meta.comment.note.source.wsd","text"],regex:/^(\s*)(note\s(?:left|right))(\s*:\s*)(.+)(\s*$)/,caseInsensitive:!0,comment:"inline note"},{token:["text","keyword.other.note.source.wsd","text"],regex:/^(\s*)(note\s(?:left|right))(\s*$)/,caseInsensitive:!0,push:[{token:["text","keyword.other.note.source.wsd"],regex:/^(\s*)(end\s*note)/,caseInsensitive:!0,next:"pop"},{token:"meta.comment.multiple.note.source.wsd",regex:/.+?/}],comment:"multiple note"},{token:["text","keyword.other.noteof.source.wsd","text","constant.numeric.noteof.source.wsd","text","keyword.other.noteof.source.wsd","text","text","support.variable.noteof.source.wsd","text","support.variable.noteof.source.wsd","text","support.variable.noteof.source.wsd","keyword.other.noteof.source.wsd","text","constant.numeric.noteof.source.wsd","text","meta.comment.noteof.source.wsd"],regex:/^(\s*)([rh]?note)(?:(\s+)(right|left|top|bottom))?(\s+)(?:(of|over)(\s*)(?:([^\s\w\d])([\w\s]+)([^\s\w\d])|(".+?"|\w+)(?:(,\s*)(".+?"|\w+))*)|(on\s+link))(\s*)((?:#\w+)?)(\s*:\s*)(.+)$/,caseInsensitive:!0,comment:"inline note of over"},{token:["text","keyword.other.noteof.source.wsd","text","constant.numeric.noteof.source.wsd","text","keyword.other.noteof.source.wsd","text","text","support.variable.noteof.source.wsd","text","support.variable.noteof.source.wsd","text","support.variable.noteof.source.wsd","keyword.other.noteof.source.wsd","text","constant.numeric.noteof.source.wsd","text"],regex:/^(\s*)([rh]?note)(?:(\s+)(right|left|top|bottom))?(\s+)(?:(of|over)(\s*)(?:([^\s\w\d])([\w\s]+)([^\s\w\d])|(".+?"|\w+)(?:(,\s*)(".+?"|\w+))*)|(on\s+link))(\s*)((?:#\w+)?)(\s*$)/,caseInsensitive:!0,push:[{token:["text","keyword.other.multline.noteof.source.wsd"],regex:/^(\s*)(end\s*[rh]?note)/,caseInsensitive:!0,next:"pop"},{token:"meta.comment.multline.noteof.source.wsd",regex:/.+?/}],comment:"multi-line note of over"},{token:["text","keyword.other.noteas.source.wsd","text","meta.comment.noteas.source.wsd","text","keyword.other.noteas.source.wsd","text","support.variable.noteas.source.wsd","text"],regex:/^(\s*)(note)(\s+)(".+?")(\s+)(as)(\s+)([\w\d]+)(\s*$)/,caseInsensitive:!0,comment:"float note, note as"},{token:["text","constant.numeric.header_legend_footer.source.wsd","text","keyword.other.header_legend_footer.source.wsd","text"],regex:/^(\s*)(?:(center|left|right)(\s+))?(header|legend|footer)(\s*$)/,caseInsensitive:!0,push:[{token:["text","keyword.other.header_legend_footer.source.wsd"],regex:/^(\s*)(end\s?(?:header|legend|footer))/,caseInsensitive:!0,next:"pop"},{token:"meta.comment.header_legend_footer.source.wsd",regex:/.+?/}],comment:"multi-line header, legend, footer"},{token:["text","constant.numeric.header_legend_footer.source.wsd","text","keyword.other.header_legend_footer.source.wsd","text","meta.comment.header_legend_footer.source.wsd","text"],regex:/^(\s*)(?:(center|left|right)(\s+))?(header|legend|footer)(\s+)(.+?)(\s*$)/,caseInsensitive:!0,comment:"header, legend, footer"},{token:"entity.name.function.preprocessings.source.wsd",regex:/!includesub|!include|!enddefinelong|!definelong|!define|!startsub|!endsub|!ifdef|!else|!endif|!ifndef|!if|!elseif|!endif|!while|!endwhile|!(?:unquoted\s|final\s)*procedure|!(?:unquoted\s|final\s)*function|!end\s*(?:function|procedure)|!return|!import|!includedef|!includeurl|!include_many|!include_once|!log|!dump_memory|!theme|!pragma|!assume\s+transparent\s+(?:dark|light)/,caseInsensitive:!0,comment:"Preprocessings"},{token:["keyword.control.note.source.wsd","constant.numeric.link.color.source.wsd","constant.language.link.source.wsd"],regex:/((?:\s+[ox]|[+*])?(?:<<|<\|?|\\\\|\\|\/\/|\}|\^|#|0|0\))?(?=[-.~=])[-.~=]+(?:\[\#(?:[0-9a-f]{6}|[0-9a-f]{3}|\w+)(?:[-\\\/](?:[0-9a-f]{6}|[0-9a-f]{3}|\w+))?\b\])?)(?:(left|right|up|down))?([-.]*(?:>>|\|?>|\\\\|\\|\/\/|\{|\^|#|0|\(0)?(?:[ox]\s+|[+*])?)/,caseInsensitive:!0,push:[{token:"text",regex:/$/,next:"pop"},{include:"#General"},{token:["text","support.variable.actor.link.source.wsd","text","meta.comment.message.link.source.wsd"],regex:/(:)([^:]+)(:\s*:)(.+)$/,caseInsensitive:!0,comment:"actor and link message"},{token:["text","meta.comment.message.link.source.wsd"],regex:/(:)(.+)$/,caseInsensitive:!0,comment:"link message"}],comment:"links"},{token:"constant.numeric.colors.source.wsd",regex:/#(?:[0-9a-f]{6}|[0-9a-f]{3}|\w+)/,caseInsensitive:!0,comment:"all color names"},{token:"support.variable.source.wsd",regex:/\b[\w_]+/,comment:"Variables"}],"#Activity":[{token:["text","keyword.other.activity.if.source.wsd","text","string.quoted.double.activity.if.source.wsd","text","keyword.other.activity.if.source.wsd","text","meta.comment.activity.if.source.wsd","text","text"],regex:/^(\s*)(else *if|if)(\s?\()(.+?)(\)\s?)(then)(?:(\s?\()(.+?)(\)))?(\s*$)/,caseInsensitive:!0,comment:"if"},{token:["text","keyword.other.activity.else.source.wsd","text","meta.comment.activity.else.source.wsd","text","text"],regex:/^(\s*)(else)(?:(\s?\()(.+?)(\)))?(\s*$)/,caseInsensitive:!0,comment:"else"},{token:["text","keyword.other.activity.while.source.wsd","keyword.other.activity.while.source.wsd","text","string.quoted.double.activity.while.source.wsd","text","text","keyword.other.activity.while.source.wsd","text","meta.comment.activity.while.source.wsd","text","text"],regex:/^(\s*)((?:repeat\s+)?)(while)(\s*\()(.+?)(\))(?:(\s*)(is)(?:(\s*\()(.+?)(\)))?)?(\s*$)/,caseInsensitive:!0,comment:"while is, repeat while is"},{token:["text","keyword.other.activity.endwhile.source.wsd","text","keyword.other.activity.endwhile.source.wsd","text","meta.comment.activity.endwhile.source.wsd","text","text"],regex:/^(\s*)(end)(\s?)(while)(?:(\s*\()(.+?)(\)))?(\s*$)/,caseInsensitive:!0,comment:"endwhile"}],"#Sequence":[{token:["text","keyword.operator.sequence.divider.source.wsd","text","string.quoted.double.sequence.divider.source.wsd","text","keyword.operator.sequence.divider.source.wsd","text"],regex:/^(\s*)(={2,})(\s*)(.+?)(\s*)(={2,})(\s*$)/,caseInsensitive:!0,comment:"divider"},{token:["text","keyword.operator.sequence.omission.source.wsd","text"],regex:/^(\s*)(\.{3,})(\s*$)/,caseInsensitive:!0,comment:"..."},{token:["text","keyword.other.sequence.ref.source.wsd","text","support.variable.sequence.ref.source.wsd","text","meta.comment.sequence.ref.source.wsd","text"],regex:/^(\s*)(ref\s+over)(\s+)(.+?)(\s*:\s*)(.+)(\s*$)/,caseInsensitive:!0,comment:"inline ref"},{token:["text","keyword.other.sequence.ref.source.wsd","text","support.variable.sequence.ref.source.wsd","text"],regex:/^(\s*)(ref\s+over)(\s+)(.+?)(\s*$)/,caseInsensitive:!0,push:[{token:"keyword.other.sequence.ref.source.wsd",regex:/end\s+ref/,caseInsensitive:!0,next:"pop"},{token:"meta.comment.sequence.ref.source.wsd",regex:/.+?/}],comment:"multi-line ref"},{token:["text","keyword.operator.sequence.delay.source.wsd","text","meta.comment.sequence.delay.source.wsd","text","keyword.operator.sequence.delay.source.wsd","text"],regex:/^(\s*)(\.{3,})(\s*)(.+)(\s*)(\.{3,})(\s*$)/,caseInsensitive:!0,comment:"delay"},{token:["keyword.operator.sequence.space.source.wsd","constant.numeric.sequence.space.source.wsd","keyword.operator.sequence.space.source.wsd"],regex:/(\|{2,})((?:\d+)?)(\|{1,})/,caseInsensitive:!0,comment:"space"}],"#State":[{token:["text","keyword.other.state.concurrent.source.wsd","text"],regex:/^(\s*)(-{2,})(\s*$)/,caseInsensitive:!0,comment:"concurrent"}],"#Object":[{token:["text","support.variable.object.addfields.source.wsd","text"],regex:/^(\s*)([\w\d_]+)(\s+:\s+s*$)/,caseInsensitive:!0,comment:"add object fields"}],"#Class":[{token:["text","keyword.other.class.group.source.wsd","text","support.variable.class.group.source.wsd","text","string.quoted.double.class.definition.source.wsd","text","keyword.other.class.group.source.wsd","text","support.variable.class.group.source.wsd","text","string.quoted.double.class.definition.source.wsd","constant.numeric.class.definition.source.wsd","text"],regex:/^(\s*)(enum|abstract\s+class|abstract|class)(\s+)([\w\d_\.]+|"[^"]+")(?:(\s*)(<<.+?>>))?(?:(\s+)(as)(\s+)([\w\d_\.]+|"[^"]+")(?:(\s*)(<<.+?>>))?)?((?:\s+#[\w\|\\\/\-]+)?)(\s*\{\s*$)/,caseInsensitive:!0,push:[{token:"text",regex:/^\s*(?<!\\)\}\s*$/,next:"pop"},{token:["text","meta.comment.class.group.separator.source.wsd","text","string.quoted.double.class.group.separator.source.wsd","text","meta.comment.class.group.separator.source.wsd"],regex:/^(\s*)([.=_-]{2,})(\s*)(?:(.+?)(\s*)([.=_-]{2,}))?/,caseInsensitive:!0,comment:"body separator"},{token:["text","storage.modifier.class.function.source.wsd","keyword.other.class.function.source.wsd","support.type.class.function.source.wsd","support.variable.class.function.source.wsd","text","support.variable.class.function.source.wsd","text","text","support.type.class.function.source.wsd","text"],regex:/^(\s*)((?:\s*\{(?:static|abstract)\}\s*)?)((?:\s*[~#+-]\s*)?)(?:((?:[\p{L}0-9_]+(?:\[\])?\s+)?)([\p{L}0-9_]+)(\(\))|([\p{L}0-9_]+)(\(\))(\s*:\s*)((?:[\p{L}0-9_]+)?))(\s*$)/,caseInsensitive:!0,comment:"function"},{token:["text","storage.modifier.class.fields.source.wsd","keyword.other.class.fields.source.wsd","support.type.class.fields.source.wsd","support.variable.class.fields.source.wsd","support.variable.class.fields.source.wsd","text","support.type.class.fields.source.wsd","text"],regex:/^(\s*)((?:\s*\{(?:static|abstract)\}\s*)?)((?:\s*[~#+-]\s*)?)(?:((?:[\p{L}0-9_]+(?:\[\])?\s+)?)([\p{L}0-9_]+)|([\p{L}0-9_]+)(\s*:\s*)((?:\w+)?))(\s*$)/,caseInsensitive:!0,comment:"fields"},{token:["text","storage.modifier.class.fields.source.wsd","keyword.other.class.fields.source.wsd","string.quoted.double.class.other.source.wsd","text"],regex:/^(\s*)((?:\s*\{(?:static|abstract)\}\s*)?)((?:\s*[~#+-]\s*)?)(.+?)(\s*$)/,caseInsensitive:!0,comment:"other fields/function"}],comment:"class group & enum"},{token:["text","keyword.other.class.hideshow.source.wsd","text","support.variable.class.hideshow.source.wsd","text","constant.numeric.class.hideshow.source.wsd","text"],regex:/^(\s*)(hide|show|remove)(\s+)((?:[\w\d_\.\$]+|"[^"]+")|<<.+?>>|Stereotypes|class|interface|enum|@unlinked)(?:(\s+)(empty fields|empty attributes|empty methods|empty description|fields|attributes|methods|members|circle))?(\s*$)/,caseInsensitive:!0,comment:"hide & show & remove"}]},this.normalizeRules()};s.metaData={author:"jebbs, qjebbs@gmail.com",comment:"All diagram and styles support.",fileTypes:["puml","plantuml","wsd"],name:"PlantUML",scopeName:"source.wsd"},r.inherits(s,i),t.PlantUMLHighlightRules=s}),ace.define("ace/mode/folding/cstyle",["require","exports","module","ace/lib/oop","ace/range","ace/mode/folding/fold_mode"],function(e,t,n){"use strict";var r=e("../../lib/oop"),i=e("../../range").Range,s=e("./fold_mode").FoldMode,o=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/,"|"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/,"|"+e.end)))};r.inherits(o,s),function(){this.foldingStartMarker=/([\{\[\(])[^\}\]\)]*$|^\s*(\/\*)/,this.foldingStopMarker=/^[^\[\{\(]*([\}\]\)])|^[\s\*]*(\*\/)/,this.singleLineBlockCommentRe=/^\s*(\/\*).*\*\/\s*$/,this.tripleStarBlockCommentRe=/^\s*(\/\*\*\*).*\*\/\s*$/,this.startRegionRe=/^\s*(\/\*|\/\/)#?region\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var r=e.getLine(n);if(this.singleLineBlockCommentRe.test(r)&&!this.startRegionRe.test(r)&&!this.tripleStarBlockCommentRe.test(r))return"";var i=this._getFoldWidgetBase(e,t,n);return!i&&this.startRegionRe.test(r)?"start":i},this.getFoldWidgetRange=function(e,t,n,r){var i=e.getLine(n);if(this.startRegionRe.test(i))return this.getCommentRegionBlock(e,i,n);var s=i.match(this.foldingStartMarker);if(s){var o=s.index;if(s[1])return this.openingBracketBlock(e,s[1],n,o);var u=e.getCommentFoldRange(n,o+s[0].length,1);return u&&!u.isMultiLine()&&(r?u=this.getSectionRange(e,n):t!="all"&&(u=null)),u}if(t==="markbegin")return;var s=i.match(this.foldingStopMarker);if(s){var o=s.index+s[0].length;return s[1]?this.closingBracketBlock(e,s[1],n,o):e.getCommentFoldRange(n,o,-1)}},this.getSectionRange=function(e,t){var n=e.getLine(t),r=n.search(/\S/),s=t,o=n.length;t+=1;var u=t,a=e.getLength();while(++t<a){n=e.getLine(t);var f=n.search(/\S/);if(f===-1)continue;if(r>f)break;var l=this.getFoldWidgetRange(e,"all",t);if(l){if(l.start.row<=s)break;if(l.isMultiLine())t=l.end.row;else if(r==f)break}u=t}return new i(s,o,u,e.getLine(u).length)},this.getCommentRegionBlock=function(e,t,n){var r=t.search(/\s*$/),s=e.getLength(),o=n,u=/^\s*(?:\/\*|\/\/|--)#?(end)?region\b/,a=1;while(++n<s){t=e.getLine(n);var f=u.exec(t);if(!f)continue;f[1]?a--:a++;if(!a)break}var l=n;if(l>o)return new i(o,r,l,t.length)}}.call(o.prototype)}),ace.define("ace/mode/plantuml",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/plantuml_highlight_rules","ace/mode/folding/cstyle"],function(e,t,n){"use strict";var r=e("../lib/oop"),i=e("./text").Mode,s=e("./plantuml_highlight_rules").PlantUMLHighlightRules,o=e("./folding/cstyle").FoldMode,u=function(){this.HighlightRules=s,this.foldingRules=new o};r.inherits(u,i),function(){this.$id="ace/mode/plantuml",this.snippetFileId="ace/snippets/plantuml"}.call(u.prototype),t.Mode=u});                (function() {
                    ace.require(["ace/mode/plantuml"], function(m) {
                        if (typeof module == "object" && typeof exports == "object" && module) {
                            module.exports = m;
                        }
                    });
                })();
            